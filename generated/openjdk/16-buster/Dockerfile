### !!! DO NOT EDIT
### It is auto-generated by http://github.com/razorci/image-gen

FROM openjdk:16-buster

# Make APT non-interactive
RUN echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/99razorci
RUN echo 'DPkg::Options "--force-confnew";' >> /etc/apt/apt.conf.d/99razorci
ENV DEBIAN_FRONTEND=noninteractive

# Install Packages
RUN mkdir -p /usr/share/man/man1
RUN apt-get update
RUN echo 'Acquire::Check-Valid-Until no;' >> /etc/apt/apt.conf
RUN apt-get install -y -m \
    git \
    mercurial \
    xvfb \
    vim \
    apt \
    locales \
    sudo \
    apt-transport-https \
    ca-certificates \
    openssh-client \
    software-properties-common \
    build-essential \
    tar \
    lsb-release \
    gzip \
    parallel \
    net-tools \
    netcat \
    unzip \
    zip \
    bzip2 \
    lftp \
    gnupg \
    curl \
    wget \
    build-essential \
    tree \
    jq
RUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime
RUN locale-gen C.UTF-8 || true
ENV LANG=C.UTF-8

# Install Docker
ARG DOCKER_GID=999
RUN set -ex \
    && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*.tgz' | sort -r | head -n 1) \
    && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}" \
    && echo Docker URL: $DOCKER_URL \
    && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz "${DOCKER_URL}" \
    && ls -lha /tmp/docker.tgz \
    && tar -xz -C /tmp -f /tmp/docker.tgz \
    && mv /tmp/docker/* /usr/bin \
    && rm -rf /tmp/docker /tmp/docker.tgz \
    && which docker \
    && (docker version || true) \
    && groupadd -g "$DOCKER_GID" -r docker

# Install Compose
ENV DOCKER_COMPOSE=1.23.2
RUN wget -q \
    https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE}/docker-compose-`uname -s`-`uname -m` -O /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose \
    && docker-compose --version

ENV DOCKERIZE_VERSION v0.6.1
RUN if grep -q Debian /etc/os-release; then      wget -q https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
     && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
     && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
   ; fi

ENV USER_NAME=razor GROUP_NAME=razor

RUN groupadd --gid 2001 razor && \
    useradd --uid 2001 --gid razor --shell /bin/bash --create-home razor && \
    usermod -a -G sudo,docker razor && \
    echo "%razor ALL=(root) NOPASSWD:ALL" >>/etc/sudoers

USER razor

USER root
ENV USER_HOME=/home/razor

ARG MAVEN_VERSION=3.6.3
ARG SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries

RUN microdnf install findutils

RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
  && rm -f /tmp/apache-maven.tar.gz \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"


RUN echo maven --version
USER razor


USER root

ENV GRADLE_VERSION=6.6 GRADLE_HOME=/opt/gradle
RUN curl --silent --show-error --location --fail --retry 3 --output /tmp/gradle.zip \
  https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip \
  && unzip -d /opt /tmp/gradle.zip \
  && rm /tmp/gradle.zip \
  && ln -s /opt/gradle-* $GRADLE_HOME \
  && $GRADLE_HOME/bin/gradle -version

USER razor

USER root
ENV ANT_VERSION=1.9.4 ANT_HOME=/opt/apache-ant

# Install Ant Version: 1.9.4
RUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-ant.tar.gz \
    https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \
  && tar xf /tmp/apache-ant.tar.gz -C /opt/ \
  && ln -s /opt/apache-ant-* $ANT_HOME \
  && rm -rf /tmp/apache-ant.tar.gz \
  && $ANT_HOME/bin/ant -version

USER razor

## Update PATH for Java tools
ENV PATH="/opt/sbt/bin::/opt/apache-ant/bin:/opt/gradle/bin:$PATH"

# smoke test with path
RUN mvn -version \
    && ant -version \
    && gradle -version

CMD ["/bin/sh"]
